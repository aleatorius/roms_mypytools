#!/global/apps/python/2.7.3/bin/python
##!/usr/bin/python -B
##!/home/ntnu/mitya/virt_env/virt1/bin/python -B
##date.py s 12122222 pr date.py d 12234, if you need to change reference date - do it manually in the code. Mitya
## Dmitry Shcherbin, 2013
'''usage: date.py d(s) num; d for days, s for seconds'''
import numpy as np
from numpy import *
from netCDF4 import *
import os, sys, re, glob
from os import system
import datetime
from datetime import date, time
import argparse

parser = argparse.ArgumentParser(description='ncdate-mitya')
#parser.add_argument('-o', help='output dir', dest='dir', action="store")
#parser.add_argument('-i', help='input file', dest='input', action="store")
parser.add_argument(help='input file', dest='input', action="store")
parser.add_argument('--time', help='time var', dest ='time', action="store", default = "ocean_time")
args = parser.parse_args()

#a = sys.argv
#if len(a) != 3: print 'not a correct input'; print __doc__; sys.exit()
his = args.input
ref = date(1970,01,01)
f = Dataset(his)
times = (args.time, "time", "clim_time", "bry_time")
result = False
for t in times:
    try:
        #a = np.asarray(f.variables[str(t)]) 
        #print a
        a = f.variables[str(t)][:]
        result = True
        break
    except KeyError:
             #e = sys.exc_info()[0]
        continue

if result == False:
    print "there is no time var with names", times
    f.close()
    exit()
else:
    print "name of time var: ", t
    pass
f.close()         
  

ref_time = time(0,0,0)
refer= datetime.datetime.combine(ref, ref_time)
#print np.asarray(a)
print  len(a), str(int(a[0])), str(int(a[-1]))
# i put 86400 as an number which exceeds dates since 1970 for sure, but it may give wrong results if your reference is weird!

if int(a[0])> 86400:
    print (refer + datetime.timedelta(float(a[0])/(3600*24))).strftime("%Y-%m-%d %H:%M:%S"), (refer + datetime.timedelta(float(a[-1])/(3600*24))).strftime("%Y-%m-%d %H:%M:%S")
else:
    print (refer + datetime.timedelta(float(a[0]))).strftime("%Y-%m-%d %H:%M:%S"), (refer + datetime.timedelta(float(a[-1]))).strftime("%Y-%m-%d %H:%M:%S")
#out = (ref + datetime.timedelta(float(a[0])/(3600*24))).isoformat(),  (ref + datetime.timedelta(float(a[-1])/(3600*24))).isoformat()
#print 'with respect to a reference date ', str(ref), '\na ocean_his dates are:              ', str(out)
