#!/global/apps/python/2.7.3/bin/python
##!/home/ntnu/mitya/virt_env/virt1/bin/python -B
import numpy as np
from numpy import *
from netCDF4 import *
import sys, re, glob
from os import system
import numpy.ma as ma
import datetime
from datetime import date, time
import argparse
parser = argparse.ArgumentParser(description='grep record 0.1')
parser.add_argument(help='input file', dest='input', action="store")
parser.add_argument('-o', help='output file', dest='output', action="store", default="sample.nc")
parser.add_argument('-dt', help='input date to grep', dest='grep', action="store", nargs=2)
parser.add_argument('-t', help='time var', dest='time_var', action="store", default="ocean_time")
parser.add_argument('-f', help='time format', dest='time_f', action="store", default="s")
#parser.add_argument('-o', help='output file', dest='output', action="store")
args = parser.parse_args()

def print_list(data):
    col_width = max(len(i) for i in data) + 2  # padding
    count = 0
    a= []
    for i in data:
        count = count +1
        if count < 6:
            a.append(i)
        else:
            print "".join(j.ljust(col_width) for j in a)
            a = []
            count = 0


def hisdate(his):
    ref_time = time(0,0,0)
    ref=date(1970,01,01)
    refer= datetime.datetime.combine(ref, ref_time)
    if args.time_f =='s':
        outdate = (refer + datetime.timedelta(float(int(his))/(3600*24))).strftime("%Y-%m-%d %H:%M:%S")
    else:
        outdate = (refer + datetime.timedelta(float(int(his)))).strftime("%Y-%m-%d %H:%M:%S")
    return outdate


def unpack(ina):
     outa = zeros(ina.shape)
     outa[:] = ina[:]
     return outa


def extract_allrec(inf, variable):
     f = Dataset(inf)
     if str(variable) in f.variables.keys():
          print '\n In the file', inf
          print 'variable', variable, 'exists'
	  ot = unpack(f.variables[variable])
	  print ot.shape
     else:
          print 'provided variable doesnt exists, choose from the list:\n'
          print_list(f.variables.keys())          
          f.close()
          sys.exit()
     
     f.close()
     return ot



#xotime = [datetime.datetime.strptime(d,'%Y_%m_%d').date() for d in otime]
grep_date = datetime.datetime.strptime(args.grep[0],'%Y-%m-%d').date()
grep_time = datetime.datetime.strptime(args.grep[1],'%H:%M:%S').time()
#print 'you want to grep', grep_date, grep_time
grep_date_time = datetime.datetime.combine(grep_date, grep_time)
print 'you want to grep', grep_date_time

records = extract_allrec(args.input, args.time_var)
numrec=0
fnd = False
for rec in records:
#    print hisdate(rec)
#    if hisdate(rec)!=grep_date_time:
    if datetime.datetime.strptime(hisdate(rec),'%Y-%m-%d %H:%M:%S')!=grep_date_time:
          #print hisdate(rec)
        numrec = numrec + 1
    else:
        numrec = numrec+1
        fnd = True
        break

if fnd == True:
    print 'a time record for the date_time ', grep_date_time, ' exists'
    print 'the record number is ', numrec
#    print 'do not forget that counting goes from 0, thus required time slice is [num-1]'
else:
    print 'no entry'



