#!/bin/bash
##mitya shcherbin' modification of yoshie script
#PBS -o /global/work/mitya/yoshie/prep_o.log
##put your paths!
#PBS -j oe
#PBS -N yoshie_data_2003_2010
#PBS -lnodes=1:ppn=1
#PBS -lpmem=29000MB
#PBS -l walltime=00:59:59
#PBS -A nn9300k
##project number!
#PBS -V
##PBS -q express
#-----------------------------------------------
#-----------------------------------------------

set -x

datstamp=`date +%Y_%m_%d_%H_%M`
WORK=/global/work/mitya
pathRun=${WORK}/yoshie
exec 1>$pathRun/log_${datstamp} 2>&1



#yr="1993 1994 1995 2003 2004 2010"
#yr="2003 2004 2005 2006 2007 2008 2009 2010"
#mon="01 02 03 04 05 06 07 08 09 10 11 12"
yr="2004"
mon="01"

module load nco netcdf 

cd $pathRun

for year in $yr; do
    for month in $mon; do
	echo $month, $year

#the following creates or overwrites temp file

	temp_file=temp_${month}_$year
	out_file=out_${month}_$year
	if [ -f $temp_file ]; then
	    rm -f $temp_file
	else
	    :
	fi

#reads from previously generated by list_date.sh - outlist. outlist shoudl contain all the info on dates, time records and files.
#writes filtered info (monthly) to temp file

	while read p; do
 	    read -a arr <<<$p
	    if [ ${arr[0]} == $year ] && [ ${arr[1]} == $month ]; then
		echo $p >> $temp_file
	    else
		:
	    fi
	done <outlist

#reads from temp file
# counter i count number of dates, just for reference
# counter j is a number of unique files covering this month. it is 4 or 3 (posible for february!)
#k is an array which collects all these j
# ARRAY is a technical array, which collects record numbers covering the specified month. as it collects 10th record it is flushed to zero. array can be like 7 8 9 10 or 1 2 3 4 
#ncks does a slicing if a final ARRAY is like 7 8 9 10 or 1 2 3 4. If an array 1 2 3 .. 10 - just symbolic link is created, no slicing

	i=0
	j=0
	k=()
	if [ -f $temp_file ]; then
	    ARRAY=()
	    while read p; do
		i=$((i+1))
		read -a arr <<<$p
		if [ ${arr[3]} == "10" ]; then
		    ARRAY+=(${arr[3]})	
		    j=$((j+1))
		    echo $j
		    k+=($j)
		    string="file "${arr[4]}" record "${ARRAY[0]}" "${ARRAY[@]:(-1)}
		    if [ ${ARRAY[0]} == "1" ]; then
			ln -s ${arr[4]} ncoout_${month}_${year}_$j
		    else
			ncks -d ocean_time,$((${ARRAY[0]}-1)),$((${ARRAY[@]:(-1)}-1)) ${arr[4]} ncoout_${month}_${year}_$j
		    fi
		    echo $string >> $out_file
		    ARRAY=()
		else
		    ARRAY+=(${arr[3]})
		fi
	    done <$temp_file
	    if [ ${#ARRAY[@]} -eq 0 ]; then
		:
	    else
	    	j=$((j+1))
		echo $j
		k+=($j)
		echo $k
		string="file "${arr[4]}" record "${ARRAY[0]}" "${ARRAY[@]:(-1)}
		ncks -d ocean_time,$((${ARRAY[0]}-1)),$((${ARRAY[@]:(-1)}-1)) ${arr[4]} ncoout_${month}_${year}_$j
		echo $string >> $out_file
	    fi

#just for a check

	    if [ ${arr[2]} != $i ]; then
		echo "something wrong with number of days"
		echo "last day " ${arr[2]}, "total number of records this month ", $i
	    else
		echo "last day " ${arr[2]}, "total number of records this month ", $i
	    fi 

# string with temp nc files which cover only this month 

	    str=""
	    for num in "${k[@]}"; do
		echo $num
		str=$str"ncoout_"${month}_${year}_$num" "
            done
	    rmstr=$str
	    str="ncra "$str"monthavg_"${month}_${year}".nc "
	    if $str; then
		echo "ncra is ok"
	    else
		echo "ERROR: ncra is not ok"
#		exit
	    fi
	    rm $rmstr
        else
            echo "no record"
        fi
    done
done

set +x
exit
